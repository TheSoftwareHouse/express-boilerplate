image: tshio/awscli-docker-compose-pipelines:0.0.3

definitions:
  caches:
    sonar: /opt/sonar-scanner/.sonar

  steps:
    - step: &sonarqube-analysis
        name: SonarQube analysis
        image: sonarsource/sonar-scanner-cli:latest
        caches:
          - sonar
        script:
          - sonar-scanner
    - step: &build
        name: Build
        caches:
          - node
        services:
          - docker
        deployment: test
        script:
          - npm run docker-build
          - npm run lint
          - docker-compose run -d --name js-container js
          - docker exec js-container npm run services-units-coverage
          - docker exec js-container npm run integration-tests-coverage
          - docker cp js-container:/coverage .
          - docker-compose stop js
        artifacts:
          - coverage/**

pipelines:
  default:
    - step: *build

  branches:
    main:
      - step: *build
      - step: *sonarqube-analysis

  custom:
    create-staging:
      - step:
          name: create staging environment
          deployment: staging
          script:
            - ./deploy/apprunner/scripts/create.sh
          services:
            - docker
    deploy-staging:
      - step:
          name: build and push docker
          deployment: staging
          script:
            - ./deploy/apprunner/scripts/release.sh
            - ./deploy/apprunner/scripts/deploy.sh
            - ./deploy/apprunner/scripts/check-deployed-commit.sh
          services:
            - docker
